package com.luvsoft.entities;

// Generated Jan 26, 2016 10:06:12 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotBlank;

import com.luvsoft.utils.NemErrorList;
import com.luvsoft.view.component.anotations.AvoidDuplication;

/**
 * Material generated by hbm2java
 */
@Entity
@Table(name = "material", catalog = "stockmanagement")
public class Material extends AbstractEntity implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -2197151457409452544L;
    private Integer id;
    private Materialtype1 materialtype1;
    private Materialtype2 materialtype2;
    private Stock stock;
    private Unit unit;
    private String code;
    private String name;
    private BigDecimal price;
    private int quantity;
    private String description;
    private Set<Coupondetail> coupondetails = new HashSet<Coupondetail>(0);
    private Set<Orderdetail> orderdetails = new HashSet<Orderdetail>(0);

    // Not-mapped members
    private transient String frk_stock_name;
    private transient String frk_unit_name;
    private transient String frk_materialtype1_name;
    private transient String frk_materialtype2_name;

    public Material() {
        id = -1;
        code = "";
        name = "";
        price = new BigDecimal(0.00d);
        quantity = 0;
        description = "";
        frk_stock_name="";
        frk_unit_name = "";
        frk_materialtype1_name = "";
        frk_materialtype2_name = "";
    }

    public Material(Materialtype1 materialtype1, Materialtype2 materialtype2, Stock stock, String code, String name, BigDecimal price, int quantity) {
        this.materialtype1 = materialtype1;
        this.materialtype2 = materialtype2;
        this.stock = stock;
        this.code = code;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    public Material(Materialtype1 materialtype1, Materialtype2 materialtype2, Stock stock, Unit unit, String code, String name, BigDecimal price,
            int quantity, String description, Set<Coupondetail> coupondetails, Set<Orderdetail> orderdetails) {
        this.materialtype1 = materialtype1;
        this.materialtype2 = materialtype2;
        this.stock = stock;
        this.unit = unit;
        this.code = code;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
        this.description = description;
        this.coupondetails = coupondetails;
        this.orderdetails = orderdetails;
    }

    public Material(Integer id, Materialtype1 materialtype1,
            Materialtype2 materialtype2, Stock stock, Unit unit, String code,
            String name, BigDecimal price, int quantity, String description,
            Set<Coupondetail> coupondetails, Set<Orderdetail> orderdetails) {
        super();
        this.id = id;
        this.materialtype1 = materialtype1;
        this.materialtype2 = materialtype2;
        this.stock = stock;
        this.unit = unit;
        this.code = code;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
        this.description = description;
        this.coupondetails = coupondetails;
        this.orderdetails = orderdetails;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idMaterialType1", nullable = false)
    public Materialtype1 getMaterialtype1() {
        return this.materialtype1;
    }

    public void setMaterialtype1(Materialtype1 materialtype1) {
        this.materialtype1 = materialtype1;

        if( materialtype1 != null ){
            frk_materialtype1_name = materialtype1.getName();
        }
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idMaterialType2", nullable = false)
    public Materialtype2 getMaterialtype2() {
        return this.materialtype2;
    }

    public void setMaterialtype2(Materialtype2 materialtype2) {
        this.materialtype2 = materialtype2;

        if( materialtype2 != null ){
            frk_materialtype2_name = materialtype2.getName();
        }
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idStock", nullable = false)
    public Stock getStock() {
        return this.stock;
    }

    public void setStock(Stock stock) {
        this.stock = stock;

        if( stock != null ){
            frk_stock_name = stock.getName();
        }
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idUnit")
    public Unit getUnit() {
        return this.unit;
    }

    public void setUnit(Unit unit) {
        this.unit = unit;

        if( unit != null ){
            frk_unit_name = unit.getName();
        }
    }

    @Column(name = "code", nullable = false, length = 45)
    @Length(max = 45, message = NemErrorList.Error_CodeTooLong)
    @NotBlank(message = NemErrorList.Error_CodeNotEmpty)
    @AvoidDuplication(message = NemErrorList.Error_CodeIsDuplicated)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "name", nullable = false, length = 128)
    @Length(max = 128, message = NemErrorList.Error_NameTooLong)
    @NotBlank(message = NemErrorList.Error_NameNotEmpty)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "price", nullable = false, scale = 4)
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    @Column(name = "quantity", nullable = false)
    public int getQuantity() {
        return this.quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Column(name = "description", length = 65535)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "material")
    public Set<Coupondetail> getCoupondetails() {
        return this.coupondetails;
    }

    public void setCoupondetails(Set<Coupondetail> coupondetails) {
        this.coupondetails = coupondetails;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "material")
    public Set<Orderdetail> getOrderdetails() {
        return this.orderdetails;
    }

    public void setOrderdetails(Set<Orderdetail> orderdetails) {
        this.orderdetails = orderdetails;
    }

    @Override
    public String toString() {
        return "Material [id=" + id + ", materialtype1=" + materialtype1
                + ", materialtype2=" + materialtype2 + ", stock=" + stock
                + ", unit=" + unit + ", code=" + code + ", name=" + name
                + ", price=" + price + ", quantity=" + quantity
                + ", description=" + description + ", coupondetails="
                + coupondetails + ", orderdetails=" + orderdetails + "]";
    }

    @Transient
    public String getFrk_stock_name() {
        return frk_stock_name;
    }

    public void setFrk_stock_name(String frk_stock_name) {
        this.frk_stock_name = frk_stock_name;
    }

    @Transient
    public String getFrk_unit_name() {
        return frk_unit_name;
    }

    public void setFrk_unit_name(String frk_unit_name) {
        this.frk_unit_name = frk_unit_name;
    }

    @Transient
    public String getFrk_materialtype1_name() {
        return frk_materialtype1_name;
    }

    public void setFrk_materialtype1_name(String frk_materialtype1_name) {
        this.frk_materialtype1_name = frk_materialtype1_name;
    }

    @Transient
    public String getFrk_materialtype2_name() {
        return frk_materialtype2_name;
    }

    public void setFrk_materialtype2_name(String frk_materialtype2_name) {
        this.frk_materialtype2_name = frk_materialtype2_name;
    }

    public static String getEntityname() {
        return "Material";
    }

    @Override
    public Object getValueByPropertyName(String propertyName) {
        switch( propertyName ){
        case "materialtype1":
            return materialtype1;
        case "materialtype2":
            return materialtype2;
        case "stock":
            return stock;
        case "unit":
            return unit;
        case "code":
            return code;
        case "name":
            return name;
        case "price":
            return price;
        case "quantity":
            return quantity;
        case "description":
            return description;
        default:
            System.out.println("Property name's not handle!");
        }

        return "Invalid value";
    }

    @Override
    public void verifyObject() {
        id = id == null ? -1 : id;
        code = code == null ? "" : code;
        name = name == null ? "" : name;
        price = price == null ? new BigDecimal(0.00d) : price;
        description = description == null ? "" : description;
    }

    @Override
    public Material cloneObject() {
        return new Material(id, materialtype1, materialtype2, stock, unit, code, frk_materialtype1_name, price, quantity, description, coupondetails, orderdetails);
    }
}
