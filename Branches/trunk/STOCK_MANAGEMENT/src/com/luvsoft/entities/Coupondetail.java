package com.luvsoft.entities;

// Generated Jan 26, 2016 10:06:12 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.luvsoft.utils.Utilities;

/**
 * Coupondetail generated by hbm2java
 */
@Entity
@Table(name = "coupondetail", catalog = "stockmanagement")
public class Coupondetail extends AbstractEntity implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 7046727495898933621L;
    private Integer id;
    private Coupon coupon;
    private Material material;
    private int quantity;
    private BigDecimal price;
    private Float saleOff;

    // Not-mapped members
    private transient String frk_material_code;
    private transient String frk_material_name;
    private transient String frk_material_unit;
    private transient String frk_material_stock;
    private transient int frk_material_quantity;
    private transient double buyingPrice;
    private transient double totalAmount;

    private transient String formattedPrice;
    private transient String formattedBuyingPrice;
    private transient String formattedTotalAmount;

    public Coupondetail() {
    }

    public Coupondetail(Coupon coupon, Material material, int quantity, BigDecimal price) {
        this.coupon = coupon;
        this.material = material;
        this.quantity = quantity;
        this.price = price;
    }

    public Coupondetail(Coupon coupon, Material material, int quantity, BigDecimal price, Float saleOff) {
        this.coupon = coupon;
        this.material = material;
        this.quantity = quantity;
        this.price = price;
        this.saleOff = saleOff;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idCoupon", nullable = false)
    public Coupon getCoupon() {
        return this.coupon;
    }

    public void setCoupon(Coupon coupon) {
        this.coupon = coupon;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idMaterial", nullable = false)
    public Material getMaterial() {
        return this.material;
    }

    public void setMaterial(Material material) {
        this.material = material;
    }

    @Column(name = "quantity", nullable = false)
    public int getQuantity() {
        return this.quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Column(name = "price", nullable = false, scale = 4)
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
        this.formattedPrice = Utilities.getNumberFormat().format(price);
    }

    @Column(name = "saleOff", precision = 12, scale = 0)
    public Float getSaleOff() {
        return this.saleOff;
    }

    public void setSaleOff(Float saleOff) {
        this.saleOff = saleOff;
    }

    @Transient
    public String getFrk_material_code() {
        return frk_material_code;
    }

    public void setFrk_material_code(String frk_material_code) {
        this.frk_material_code = frk_material_code;
    }

    @Transient
    public String getFrk_material_name() {
        return frk_material_name;
    }

    public void setFrk_material_name(String frk_material_name) {
        this.frk_material_name = frk_material_name;
    }

    @Transient
    public String getFrk_material_unit() {
        return frk_material_unit;
    }

    public void setFrk_material_unit(String frk_material_unit) {
        this.frk_material_unit = frk_material_unit;
    }

    @Transient
    public String getFrk_material_stock() {
        return frk_material_stock;
    }

    public void setFrk_material_stock(String frk_material_stock) {
        this.frk_material_stock = frk_material_stock;
    }

    @Transient
    public int getFrk_material_quantity() {
        return frk_material_quantity;
    }

    public void setFrk_material_quantity(int frk_material_quantity) {
        this.frk_material_quantity = frk_material_quantity;
    }

    @Transient
    public double getBuyingPrice() {
        return buyingPrice;
    }

    public void setBuyingPrice(double buyingPrice) {
        this.formattedBuyingPrice = Utilities.getNumberFormat().format(buyingPrice);
        this.buyingPrice = buyingPrice;
    }

    @Transient
    public double getTotalAmount() {
        return totalAmount;
    }

    public void setTotalAmount(double totalAmount) {
        this.formattedTotalAmount = Utilities.getNumberFormat().format(totalAmount);
        this.totalAmount = totalAmount;
    }

    @Transient
    public String getformattedPrice() {
        formattedPrice = Utilities.getNumberFormat().format(price.doubleValue());
        return formattedPrice;
    }

    public void setformattedPrice(String formattedPrice) {
        price = new BigDecimal(Utilities.getDoubleValueFromFormattedStr(formattedPrice));
        this.formattedPrice = formattedPrice;
    }

    @Transient
    public String getFormattedBuyingPrice() {
        formattedBuyingPrice = Utilities.getNumberFormat().format(buyingPrice);
        return formattedBuyingPrice;
    }

    public void setFormattedBuyingPrice(String formattedBuyingPrice) {
        buyingPrice = Utilities.getDoubleValueFromFormattedStr(formattedBuyingPrice);
        this.formattedBuyingPrice = formattedBuyingPrice;
    }

    @Transient
    public String getFormattedTotalAmount() {
        formattedTotalAmount = Utilities.getNumberFormat().format(totalAmount);
        return formattedTotalAmount;
    }

    public void setFormattedTotalAmount(String formattedTotalAmount) {
        totalAmount = Utilities.getDoubleValueFromFormattedStr(formattedTotalAmount);
        this.formattedTotalAmount = formattedTotalAmount;
    }

    @Override
    public String toString() {
        return "Coupondetail [id=" + id + ", coupon=" + coupon + ", material="
                + material + ", quantity=" + quantity + ", price=" + price
                + ", saleOff=" + saleOff + "]";
    }

    public static String getEntityname() {
        return "Coupondetail";
    }

    @Override
    public Object getValueByPropertyName(String propertyName) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void verifyObject() {
        // TODO Auto-generated method stub
        
    }

    @Override
    public AbstractEntity cloneObject() {
        // TODO Auto-generated method stub
        return null;
    }

}
